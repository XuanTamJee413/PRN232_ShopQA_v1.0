// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ShopQADbContext))]
    [Migration("20250630164128_database")]
    partial class database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Hà Nội",
                            Country = "Việt Nam",
                            Street = "123 Nguyễn Trãi",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            City = "Hải Phòng",
                            Country = "Việt Nam",
                            Street = "25 Điện Biên Phủ",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            City = "Đà Nẵng",
                            Country = "Việt Nam",
                            Street = "56 Nguyễn Văn Linh",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            City = "Hồ Chí Minh",
                            Country = "Việt Nam",
                            Street = "78 Trần Hưng Đạo",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            City = "Hà Nội",
                            Country = "Việt Nam",
                            Street = "135 Nguyễn Văn Cừ",
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            City = "Cần Thơ",
                            Country = "Việt Nam",
                            Street = "89 Phan Đình Phùng",
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            City = "Bình Dương",
                            Country = "Việt Nam",
                            Street = "199 Cách Mạng Tháng Tám",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Domain.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Việt Tiến"
                        },
                        new
                        {
                            Id = 2,
                            Name = "An Phước"
                        },
                        new
                        {
                            Id = 3,
                            Name = "May 10"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Blue Exchange"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Routine"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ninomaxx"
                        });
                });

            modelBuilder.Entity("Domain.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductVariantId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CartId = 1,
                            ProductVariantId = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            CartId = 1,
                            ProductVariantId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            CartId = 1,
                            ProductVariantId = 3,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 4,
                            CartId = 2,
                            ProductVariantId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            CartId = 2,
                            ProductVariantId = 5,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            CartId = 2,
                            ProductVariantId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            CartId = 3,
                            ProductVariantId = 7,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Áo thun"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Áo khoác"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Chân váy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Quần jean"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Đồ thể thao"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Đồ ngủ"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Đồ công sở"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Giày dép"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Túi xách"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Phụ kiện thời trang"
                        });
                });

            modelBuilder.Entity("Domain.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductVariantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("Discount", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10m,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductVariantId = 1,
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Amount = 15m,
                            EndDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductVariantId = 2,
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Amount = 5m,
                            EndDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductVariantId = 3,
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        });
                });

            modelBuilder.Entity("Domain.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductVariantId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductVariantId")
                        .IsUnique();

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductVariantId = 1,
                            Quantity = 20,
                            UpdatedAt = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 770000m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductVariantId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Price = 350000m,
                            ProductVariantId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            Price = 420000m,
                            ProductVariantId = 3,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 770000m,
                            Method = "COD",
                            OrderId = 1,
                            PaidAt = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            Description = "Form Hàn Quốc, vải lụa mát, thích hợp đi học và đi làm.",
                            ImageUrl = "/images/products/ao-so-mi-trang.jpg",
                            Name = "Áo sơ mi trắng nam"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 2,
                            Description = "Vải co giãn, mặc nhẹ thoáng mát.",
                            ImageUrl = "/images/products/quan-tay.jpg",
                            Name = "Quần tây công sở"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CategoryId = 3,
                            Description = "Đầm nữ dáng xòe, chất liệu cao cấp.",
                            ImageUrl = "/images/products/dam-nu.jpg",
                            Name = "Đầm nữ công sở"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            CategoryId = 1,
                            Description = "Áo sơ mi caro trẻ trung, cá tính.",
                            ImageUrl = "/images/products/ao-so-mi-caro.jpg",
                            Name = "Áo sơ mi caro nam"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 5,
                            CategoryId = 2,
                            Description = "Phong cách thanh lịch, hợp thời trang công sở.",
                            ImageUrl = "/images/products/quan-tay-ong-dung.jpg",
                            Name = "Quần tây ống đứng"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 6,
                            CategoryId = 3,
                            Description = "Chất cotton thoáng mát, kiểu dáng đơn giản.",
                            ImageUrl = "/images/products/dam-suong.jpg",
                            Name = "Đầm suông tay lỡ"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 5,
                            CategoryId = 1,
                            Description = "Vải cotton, ít nhăn, dễ ủi, thoải mái vận động.",
                            ImageUrl = "/images/products/ao-so-mi-xanh.jpg",
                            Name = "Áo sơ mi xanh dương"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 3,
                            CategoryId = 2,
                            Description = "Thiết kế giúp tôn dáng, chất vải cao cấp.",
                            ImageUrl = "/images/products/quan-tay-nu.jpg",
                            Name = "Quần tây lưng cao nữ"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 2,
                            CategoryId = 3,
                            Description = "Dáng ôm body, phong cách sang trọng.",
                            ImageUrl = "/images/products/dam-ren.jpg",
                            Name = "Đầm dự tiệc ren hoa"
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 6,
                            CategoryId = 1,
                            Description = "Phong cách trẻ trung, lịch sự, dễ phối đồ.",
                            ImageUrl = "/images/products/ao-co-tru.jpg",
                            Name = "Áo sơ mi cổ trụ nam"
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 1,
                            CategoryId = 2,
                            Description = "Tôn dáng, chất liệu mềm mại, co giãn tốt.",
                            ImageUrl = "/images/products/quan-slimfit.jpg",
                            Name = "Quần tây slimfit nam"
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 4,
                            CategoryId = 3,
                            Description = "Dáng ôm body, tôn dáng, phù hợp dự tiệc.",
                            ImageUrl = "/images/products/dam-body.jpg",
                            Name = "Đầm body tay dài ren"
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 5,
                            CategoryId = 1,
                            Description = "Vải lụa cao cấp, mềm mại, không nhăn.",
                            ImageUrl = "/images/products/ao-lua-nu.jpg",
                            Name = "Áo sơ mi lụa nữ cao cấp"
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 2,
                            CategoryId = 2,
                            Description = "Màu xám, đơn giản, thích hợp đi làm.",
                            ImageUrl = "/images/products/quan-basic.jpg",
                            Name = "Quần tây nam màu xám"
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 6,
                            CategoryId = 3,
                            Description = "Phong cách dễ thương, nhẹ nhàng.",
                            ImageUrl = "/images/products/dam-hoa-nhi.jpg",
                            Name = "Đầm hoa nhí xòe nhẹ"
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 3,
                            CategoryId = 1,
                            Description = "Thoáng mát, phù hợp mùa hè.",
                            ImageUrl = "/images/products/ao-linen.jpg",
                            Name = "Áo sơ mi linen nam trắng"
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 4,
                            CategoryId = 2,
                            Description = "Màu nâu, chất kaki, co giãn nhẹ.",
                            ImageUrl = "/images/products/quan-kaki.jpg",
                            Name = "Quần kaki công sở"
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 5,
                            CategoryId = 3,
                            Description = "Phong cách công chúa, phù hợp dạo phố.",
                            ImageUrl = "/images/products/dam-maxi.jpg",
                            Name = "Đầm maxi tay bồng trắng"
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 2,
                            CategoryId = 1,
                            Description = "Form rộng, thoải mái, trẻ trung.",
                            ImageUrl = "/images/products/ao-caro-nu.jpg",
                            Name = "Áo sơ mi sọc caro nữ form rộng"
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 1,
                            CategoryId = 2,
                            Description = "Thiết kế thời trang, mát mẻ cho mùa hè.",
                            ImageUrl = "/images/products/quan-lung.jpg",
                            Name = "Quần lửng nữ mùa hè"
                        });
                });

            modelBuilder.Entity("Domain.Models.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Trắng",
                            ImageUrl = "/images/products/ao-so-mi-trang-m.jpg",
                            Price = 350000m,
                            ProductId = 1,
                            Size = "M",
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            Color = "Trắng",
                            ImageUrl = "/images/products/ao-so-mi-trang-l.jpg",
                            Price = 355000m,
                            ProductId = 1,
                            Size = "L",
                            Stock = 15
                        },
                        new
                        {
                            Id = 3,
                            Color = "Xanh",
                            ImageUrl = "/images/products/ao-so-mi-trang-xl.jpg",
                            Price = 360000m,
                            ProductId = 1,
                            Size = "XL",
                            Stock = 10
                        },
                        new
                        {
                            Id = 4,
                            Color = "Đỏ",
                            ImageUrl = "/images/products/ao-so-mi-trang-m-do.jpg",
                            Price = 355000m,
                            ProductId = 1,
                            Size = "M",
                            Stock = 12
                        },
                        new
                        {
                            Id = 5,
                            Color = "Đen",
                            ImageUrl = "/images/products/quan-tay-den-32.jpg",
                            Price = 420000m,
                            ProductId = 2,
                            Size = "32",
                            Stock = 10
                        },
                        new
                        {
                            Id = 6,
                            Color = "Xám",
                            ImageUrl = "/images/products/quan-tay-xam-34.jpg",
                            Price = 430000m,
                            ProductId = 2,
                            Size = "34",
                            Stock = 15
                        },
                        new
                        {
                            Id = 7,
                            Color = "Đen",
                            ImageUrl = "/images/products/quan-tay-den-36.jpg",
                            Price = 435000m,
                            ProductId = 2,
                            Size = "36",
                            Stock = 8
                        },
                        new
                        {
                            Id = 8,
                            Color = "Đỏ",
                            ImageUrl = "/images/products/dam-nu-do-s.jpg",
                            Price = 500000m,
                            ProductId = 3,
                            Size = "S",
                            Stock = 8
                        },
                        new
                        {
                            Id = 9,
                            Color = "Đen",
                            ImageUrl = "/images/products/dam-nu-den-m.jpg",
                            Price = 520000m,
                            ProductId = 3,
                            Size = "M",
                            Stock = 5
                        },
                        new
                        {
                            Id = 10,
                            Color = "Trắng",
                            ImageUrl = "/images/products/dam-nu-trang-l.jpg",
                            Price = 530000m,
                            ProductId = 3,
                            Size = "L",
                            Stock = 3
                        },
                        new
                        {
                            Id = 11,
                            Color = "Caro Xanh",
                            ImageUrl = "/images/products/ao-so-mi-caro-xanh-m.jpg",
                            Price = 370000m,
                            ProductId = 4,
                            Size = "M",
                            Stock = 20
                        },
                        new
                        {
                            Id = 12,
                            Color = "Caro Đỏ",
                            ImageUrl = "/images/products/ao-so-mi-caro-do-l.jpg",
                            Price = 375000m,
                            ProductId = 4,
                            Size = "L",
                            Stock = 15
                        },
                        new
                        {
                            Id = 13,
                            Color = "Caro Đen",
                            ImageUrl = "/images/products/ao-so-mi-caro-den-xl.jpg",
                            Price = 380000m,
                            ProductId = 4,
                            Size = "XL",
                            Stock = 10
                        },
                        new
                        {
                            Id = 14,
                            Color = "Xám",
                            ImageUrl = "/images/products/quan-tay-xam-30.jpg",
                            Price = 440000m,
                            ProductId = 5,
                            Size = "30",
                            Stock = 18
                        },
                        new
                        {
                            Id = 15,
                            Color = "Đen",
                            ImageUrl = "/images/products/quan-tay-den-32.jpg",
                            Price = 445000m,
                            ProductId = 5,
                            Size = "32",
                            Stock = 20
                        },
                        new
                        {
                            Id = 16,
                            Color = "Xám",
                            ImageUrl = "/images/products/quan-tay-xam-34.jpg",
                            Price = 450000m,
                            ProductId = 5,
                            Size = "34",
                            Stock = 12
                        },
                        new
                        {
                            Id = 17,
                            Color = "Be",
                            ImageUrl = "/images/products/dam-suong-be-m.jpg",
                            Price = 460000m,
                            ProductId = 6,
                            Size = "M",
                            Stock = 14
                        },
                        new
                        {
                            Id = 18,
                            Color = "Trắng",
                            ImageUrl = "/images/products/dam-suong-trang-l.jpg",
                            Price = 470000m,
                            ProductId = 6,
                            Size = "L",
                            Stock = 16
                        },
                        new
                        {
                            Id = 19,
                            Color = "Xanh",
                            ImageUrl = "/images/products/dam-suong-xanh-xl.jpg",
                            Price = 480000m,
                            ProductId = 6,
                            Size = "XL",
                            Stock = 10
                        },
                        new
                        {
                            Id = 20,
                            Color = "Xanh Dương",
                            ImageUrl = "/images/products/ao-so-mi-xanh-m.jpg",
                            Price = 355000m,
                            ProductId = 7,
                            Size = "M",
                            Stock = 25
                        },
                        new
                        {
                            Id = 21,
                            Color = "Xanh Dương",
                            ImageUrl = "/images/products/ao-so-mi-xanh-l.jpg",
                            Price = 360000m,
                            ProductId = 7,
                            Size = "L",
                            Stock = 20
                        },
                        new
                        {
                            Id = 22,
                            Color = "Xanh Dương",
                            ImageUrl = "/images/products/ao-so-mi-xanh-xl.jpg",
                            Price = 370000m,
                            ProductId = 7,
                            Size = "XL",
                            Stock = 10
                        },
                        new
                        {
                            Id = 23,
                            Color = "Đen",
                            ImageUrl = "/images/products/quan-tay-nu-den-s.jpg",
                            Price = 480000m,
                            ProductId = 8,
                            Size = "S",
                            Stock = 10
                        },
                        new
                        {
                            Id = 24,
                            Color = "Xám",
                            ImageUrl = "/images/products/quan-tay-nu-xam-m.jpg",
                            Price = 490000m,
                            ProductId = 8,
                            Size = "M",
                            Stock = 15
                        },
                        new
                        {
                            Id = 25,
                            Color = "Đỏ",
                            ImageUrl = "/images/products/quan-tay-nu-do-l.jpg",
                            Price = 495000m,
                            ProductId = 8,
                            Size = "L",
                            Stock = 12
                        },
                        new
                        {
                            Id = 26,
                            Color = "Đỏ",
                            ImageUrl = "/images/products/dam-ren-do-m.jpg",
                            Price = 520000m,
                            ProductId = 9,
                            Size = "M",
                            Stock = 8
                        },
                        new
                        {
                            Id = 27,
                            Color = "Đỏ",
                            ImageUrl = "/images/products/dam-ren-do-l.jpg",
                            Price = 530000m,
                            ProductId = 9,
                            Size = "L",
                            Stock = 5
                        },
                        new
                        {
                            Id = 28,
                            Color = "Đỏ",
                            ImageUrl = "/images/products/dam-ren-do-xl.jpg",
                            Price = 540000m,
                            ProductId = 9,
                            Size = "XL",
                            Stock = 3
                        },
                        new
                        {
                            Id = 29,
                            Color = "Trắng",
                            ImageUrl = "/images/products/ao-co-tru-trang-m.jpg",
                            Price = 360000m,
                            ProductId = 10,
                            Size = "M",
                            Stock = 18
                        },
                        new
                        {
                            Id = 30,
                            Color = "Trắng",
                            ImageUrl = "/images/products/ao-co-tru-trang-l.jpg",
                            Price = 370000m,
                            ProductId = 10,
                            Size = "L",
                            Stock = 12
                        },
                        new
                        {
                            Id = 31,
                            Color = "Trắng",
                            ImageUrl = "/images/products/ao-co-tru-trang-xl.jpg",
                            Price = 375000m,
                            ProductId = 10,
                            Size = "XL",
                            Stock = 8
                        },
                        new
                        {
                            Id = 32,
                            Color = "Đen",
                            ImageUrl = "/images/products/quan-slimfit-den-30.jpg",
                            Price = 430000m,
                            ProductId = 11,
                            Size = "30",
                            Stock = 14
                        },
                        new
                        {
                            Id = 33,
                            Color = "Xám",
                            ImageUrl = "/images/products/quan-slimfit-xam-32.jpg",
                            Price = 440000m,
                            ProductId = 11,
                            Size = "32",
                            Stock = 20
                        },
                        new
                        {
                            Id = 34,
                            Color = "Đen",
                            ImageUrl = "/images/products/quan-slimfit-den-34.jpg",
                            Price = 445000m,
                            ProductId = 11,
                            Size = "34",
                            Stock = 15
                        },
                        new
                        {
                            Id = 35,
                            Color = "Đen",
                            ImageUrl = "/images/products/dam-body-den-s.jpg",
                            Price = 550000m,
                            ProductId = 12,
                            Size = "S",
                            Stock = 10
                        },
                        new
                        {
                            Id = 36,
                            Color = "Đỏ",
                            ImageUrl = "/images/products/dam-body-do-m.jpg",
                            Price = 560000m,
                            ProductId = 12,
                            Size = "M",
                            Stock = 8
                        },
                        new
                        {
                            Id = 37,
                            Color = "Đen",
                            ImageUrl = "/images/products/dam-body-den-l.jpg",
                            Price = 570000m,
                            ProductId = 12,
                            Size = "L",
                            Stock = 5
                        },
                        new
                        {
                            Id = 38,
                            Color = "Trắng",
                            ImageUrl = "/images/products/ao-lua-nu-trang-m.jpg",
                            Price = 480000m,
                            ProductId = 13,
                            Size = "M",
                            Stock = 20
                        },
                        new
                        {
                            Id = 39,
                            Color = "Trắng",
                            ImageUrl = "/images/products/ao-lua-nu-trang-l.jpg",
                            Price = 490000m,
                            ProductId = 13,
                            Size = "L",
                            Stock = 15
                        },
                        new
                        {
                            Id = 40,
                            Color = "Hồng",
                            ImageUrl = "/images/products/ao-lua-nu-hong-xl.jpg",
                            Price = 495000m,
                            ProductId = 13,
                            Size = "XL",
                            Stock = 10
                        },
                        new
                        {
                            Id = 41,
                            Color = "Xám",
                            ImageUrl = "/images/products/quan-basic-xam-32.jpg",
                            Price = 430000m,
                            ProductId = 14,
                            Size = "32",
                            Stock = 18
                        },
                        new
                        {
                            Id = 42,
                            Color = "Đen",
                            ImageUrl = "/images/products/quan-basic-den-34.jpg",
                            Price = 435000m,
                            ProductId = 14,
                            Size = "34",
                            Stock = 20
                        },
                        new
                        {
                            Id = 43,
                            Color = "Xám",
                            ImageUrl = "/images/products/quan-basic-xam-36.jpg",
                            Price = 440000m,
                            ProductId = 14,
                            Size = "36",
                            Stock = 15
                        },
                        new
                        {
                            Id = 44,
                            Color = "Hồng",
                            ImageUrl = "/images/products/dam-hoa-nhi-hong-s.jpg",
                            Price = 460000m,
                            ProductId = 15,
                            Size = "S",
                            Stock = 14
                        },
                        new
                        {
                            Id = 45,
                            Color = "Trắng",
                            ImageUrl = "/images/products/dam-hoa-nhi-trang-m.jpg",
                            Price = 470000m,
                            ProductId = 15,
                            Size = "M",
                            Stock = 10
                        },
                        new
                        {
                            Id = 46,
                            Color = "Xanh",
                            ImageUrl = "/images/products/dam-hoa-nhi-xanh-l.jpg",
                            Price = 475000m,
                            ProductId = 15,
                            Size = "L",
                            Stock = 8
                        },
                        new
                        {
                            Id = 47,
                            Color = "Trắng",
                            ImageUrl = "/images/products/ao-linen-trang-m.jpg",
                            Price = 370000m,
                            ProductId = 16,
                            Size = "M",
                            Stock = 20
                        },
                        new
                        {
                            Id = 48,
                            Color = "Be",
                            ImageUrl = "/images/products/ao-linen-be-l.jpg",
                            Price = 375000m,
                            ProductId = 16,
                            Size = "L",
                            Stock = 15
                        },
                        new
                        {
                            Id = 49,
                            Color = "Xám",
                            ImageUrl = "/images/products/ao-linen-xam-xl.jpg",
                            Price = 380000m,
                            ProductId = 16,
                            Size = "XL",
                            Stock = 10
                        },
                        new
                        {
                            Id = 50,
                            Color = "Nâu",
                            ImageUrl = "/images/products/quan-kaki-nau-30.jpg",
                            Price = 450000m,
                            ProductId = 17,
                            Size = "30",
                            Stock = 18
                        },
                        new
                        {
                            Id = 51,
                            Color = "Nâu",
                            ImageUrl = "/images/products/quan-kaki-nau-32.jpg",
                            Price = 455000m,
                            ProductId = 17,
                            Size = "32",
                            Stock = 20
                        },
                        new
                        {
                            Id = 52,
                            Color = "Xám",
                            ImageUrl = "/images/products/quan-kaki-xam-34.jpg",
                            Price = 460000m,
                            ProductId = 17,
                            Size = "34",
                            Stock = 15
                        },
                        new
                        {
                            Id = 53,
                            Color = "Đen",
                            ImageUrl = "/images/products/dam-voan-den-s.jpg",
                            Price = 530000m,
                            ProductId = 18,
                            Size = "S",
                            Stock = 15
                        },
                        new
                        {
                            Id = 54,
                            Color = "Đỏ",
                            ImageUrl = "/images/products/dam-voan-do-m.jpg",
                            Price = 540000m,
                            ProductId = 18,
                            Size = "M",
                            Stock = 12
                        },
                        new
                        {
                            Id = 55,
                            Color = "Trắng",
                            ImageUrl = "/images/products/dam-voan-trang-l.jpg",
                            Price = 550000m,
                            ProductId = 18,
                            Size = "L",
                            Stock = 10
                        },
                        new
                        {
                            Id = 56,
                            Color = "Xanh",
                            ImageUrl = "/images/products/ao-thun-xanh-m.jpg",
                            Price = 360000m,
                            ProductId = 19,
                            Size = "M",
                            Stock = 20
                        },
                        new
                        {
                            Id = 57,
                            Color = "Xanh",
                            ImageUrl = "/images/products/ao-thun-xanh-l.jpg",
                            Price = 365000m,
                            ProductId = 19,
                            Size = "L",
                            Stock = 15
                        },
                        new
                        {
                            Id = 58,
                            Color = "Đen",
                            ImageUrl = "/images/products/ao-thun-den-xl.jpg",
                            Price = 370000m,
                            ProductId = 19,
                            Size = "XL",
                            Stock = 12
                        },
                        new
                        {
                            Id = 59,
                            Color = "Đen",
                            ImageUrl = "/images/products/quan-jean-den-32.jpg",
                            Price = 430000m,
                            ProductId = 20,
                            Size = "32",
                            Stock = 25
                        },
                        new
                        {
                            Id = 60,
                            Color = "Xám",
                            ImageUrl = "/images/products/quan-jean-xam-34.jpg",
                            Price = 435000m,
                            ProductId = 20,
                            Size = "34",
                            Stock = 20
                        },
                        new
                        {
                            Id = 61,
                            Color = "Xanh",
                            ImageUrl = "/images/products/quan-jean-xanh-36.jpg",
                            Price = 440000m,
                            ProductId = 20,
                            Size = "36",
                            Stock = 15
                        });
                });

            modelBuilder.Entity("Domain.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Sản phẩm rất tốt!",
                            CreatedAt = new DateTime(2025, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Rating = 5,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "tranb@gmail.com",
                            PasswordHash = "123",
                            Role = "Customer",
                            Status = "Active",
                            Username = "tranthib"
                        },
                        new
                        {
                            Id = 2,
                            Email = "minhc@yahoo.com",
                            PasswordHash = "123",
                            Role = "Customer",
                            Status = "Active",
                            Username = "leminhc"
                        },
                        new
                        {
                            Id = 3,
                            Email = "staff@shopqa.vn",
                            PasswordHash = "123",
                            Role = "Staff",
                            Status = "Active",
                            Username = "staff"
                        },
                        new
                        {
                            Id = 4,
                            Email = "thanhp@gmail.com",
                            PasswordHash = "123",
                            Role = "Customer",
                            Status = "Active",
                            Username = "phamthanh"
                        },
                        new
                        {
                            Id = 5,
                            Email = "hoa.nguyen@gmail.com",
                            PasswordHash = "123",
                            Role = "Customer",
                            Status = "Active",
                            Username = "nguyenhoa"
                        },
                        new
                        {
                            Id = 6,
                            Email = "admin@shopqa.vn",
                            PasswordHash = "123",
                            Role = "Admin",
                            Status = "Active",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Domain.Models.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("Domain.Models.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("WishlistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WishlistId");

                    b.ToTable("WishlistItems");
                });

            modelBuilder.Entity("Domain.Models.Address", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Cart", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.CartItem", b =>
                {
                    b.HasOne("Domain.Models.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.ProductVariant", "ProductVariant")
                        .WithMany()
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("Domain.Models.Discount", b =>
                {
                    b.HasOne("Domain.Models.ProductVariant", "ProductVariant")
                        .WithMany()
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("Domain.Models.Inventory", b =>
                {
                    b.HasOne("Domain.Models.ProductVariant", "ProductVariant")
                        .WithOne("Inventory")
                        .HasForeignKey("Domain.Models.Inventory", "ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.OrderItem", b =>
                {
                    b.HasOne("Domain.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.ProductVariant", "ProductVariant")
                        .WithMany()
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("Domain.Models.Payment", b =>
                {
                    b.HasOne("Domain.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.HasOne("Domain.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Models.ProductVariant", b =>
                {
                    b.HasOne("Domain.Models.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Models.Review", b =>
                {
                    b.HasOne("Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Wishlist", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.WishlistItem", b =>
                {
                    b.HasOne("Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Models.Wishlist", "Wishlist")
                        .WithMany("Items")
                        .HasForeignKey("WishlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Wishlist");
                });

            modelBuilder.Entity("Domain.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("Domain.Models.ProductVariant", b =>
                {
                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Models.Wishlist", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
