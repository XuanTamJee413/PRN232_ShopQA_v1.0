@{
    ViewData["Title"] = "Product Detail";
}
<input type="hidden" id="jwtToken" value="@ViewBag.Token" />
<div class="container mt-5">
    <h2 class="mb-4 text-center">Product Detail</h2>

    <div class="row mb-4">
        <div class="col-md-5">
            <img id="mainImage" src="" class="img-fluid rounded shadow" alt="Product Image" />
        </div>
        <div class="col-md-7">
            <h3 id="productName"></h3>
            <p id="productDescription"></p>
            <p><strong>Category:</strong> <span id="productCategory"></span></p>
            <p><strong>Brand:</strong> <span id="productBrand"></span></p>
        </div>
    </div>

    <div class="mb-4">
        <button id="addVariantBtn" class="btn btn-success">➕ Add Variant</button>
    </div>
    <div class="mb-4">
        <div class="row">
            <div class="col-md-4">
                <input type="text" id="searchInput" class="form-control" placeholder="Search by Size or Color" />
            </div>
            <div class="col-md-4">
                <input type="number" id="minPrice" class="form-control" placeholder="Min Price (VND)" min="0" />
            </div>
            <div class="col-md-4">
                <input type="number" id="maxPrice" class="form-control" placeholder="Max Price (VND)" min="0" />
            </div>
        </div>
    </div>

    <h4 class="mt-5">Variants</h4>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Size</th>
                <th>Color</th>
                <th>Price</th>
                <th>Inventory</th>
                <th>Image</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="variantTableBody"></tbody>
    </table>

    <div class="mb-4 text-center">
        <button id="prevPageBtn" class="btn btn-secondary" disabled>❮ Previous</button>
        <span id="pageNumber">Page 1</span>
        <button id="nextPageBtn" class="btn btn-secondary">Next ❯</button>
    </div>
</div>

<div class="modal fade" id="addVariantModal" tabindex="-1" aria-labelledby="addVariantModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="createVariantForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="addVariantModalLabel">➕ Add New Variant</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="productId" />
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="size" class="form-label">Size</label>
                            <input type="text" class="form-control" id="size" required />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="color" class="form-label">Color</label>
                            <input type="text" class="form-control" id="color" required />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="price" class="form-label">Price (VND)</label>
                            <input type="number" class="form-control" id="price" min="0" required />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="inventoryQuantity" class="form-label">Inventory Quantity</label>
                            <input type="number" class="form-control" id="inventoryQuantity" min="0" required />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="newVariantImageFile" class="form-label">Image File</label>
                            <input type="file" class="form-control" id="newVariantImageFile" accept="image/*" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">✅ Add Variant</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">❌ Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="updateVariantModal" tabindex="-1" aria-labelledby="updateVariantModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="updateVariantForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateVariantModalLabel">✏️ Update Variant</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="updateVariantId" />
                    <input type="hidden" id="currentImageUrlHidden" /> <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="updateSize" class="form-label">Size</label>
                            <input type="text" class="form-control" id="updateSize" required />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="updateColor" class="form-label">Color</label>
                            <input type="text" class="form-control" id="updateColor" required />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="updatePrice" class="form-label">Price (VND)</label>
                            <input type="number" class="form-control" id="updatePrice" min="0" required />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="updateInventoryQuantity" class="form-label">Inventory Quantity</label>
                            <input type="number" class="form-control" id="updateInventoryQuantity" min="0" required />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="updateImageFile" class="form-label">Upload New Image</label>
                            <input type="file" class="form-control" id="updateImageFile" accept="image/*" />
                            <small class="form-text text-muted">Leave empty to keep current image.</small>
                            <div class="mt-2">
                                <img id="currentVariantImagePreview" src="" class="img-thumbnail" width="100" style="display: none;" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">✅ Update Variant</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">❌ Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.min.js"></script>
    <script>
        const productId = window.location.pathname.split('/').pop();
        const token = $('#jwtToken').val();
        let currentPage = 1;
        const pageSize = 5;
        let variants = []; // Mảng lưu trữ tất cả các biến thể
        let fuse; // Fuse.js instance

        function loadProductDetails() {
            $.ajax({
                url: `https://localhost:7101/api/Product/${productId}`,
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                success: function (product) {
                    $('#mainImage').attr('src', product.imageUrl || '/images/default.png');
                    $('#productName').text(product.name);
                    $('#productDescription').text(product.description);
                    $('#productCategory').text(product.categoryName);
                    $('#productBrand').text(product.brand?.name || 'N/A');

                    variants = product.variants || [];

                    const options = {
                        includeScore: true,
                        keys: ['size', 'color', 'price']
                    };
                    fuse = new Fuse(variants, options);

                    showVariants();
                },
                error: function (xhr) {
                    alert('❌ Không thể tải thông tin sản phẩm. Lỗi: ' + xhr.responseText);
                }
            });
        }

        function showVariants() {
            const minPrice = parseInt($('#minPrice').val()) || 0;
            const maxPrice = parseInt($('#maxPrice').val()) || Infinity;
            const searchQuery = $('#searchInput').val().toLowerCase();

            let filteredVariants = variants;

            if (searchQuery) {
                filteredVariants = fuse.search(searchQuery).map(result => result.item);
            }

            filteredVariants = filteredVariants.filter(variant => {
                const price = variant.price;
                return price >= minPrice && price <= maxPrice;
            });

            const startIndex = (currentPage - 1) * pageSize;
            const endIndex = startIndex + pageSize;
            const currentVariants = filteredVariants.slice(startIndex, endIndex);

            const tableBody = $('#variantTableBody').empty();
            if (currentVariants.length > 0) {
                currentVariants.forEach(variant => {
                    const row = `<tr>
                        <td>${variant.size}</td>
                        <td>${variant.color}</td>
                        <td>${variant.price.toLocaleString('vi-VN')}₫</td>
                        <td>${variant.inventory?.quantity || 0}</td>
                        <td><img src="${variant.imageUrl || '/images/default.png'}" class="img-thumbnail" width="80" /></td>
                        <td><button class="btn btn-sm btn-warning" onclick="showUpdateVariant(${variant.id}, '${variant.size}', '${variant.color}', ${variant.price}, ${variant.inventory?.quantity || 0}, '${variant.imageUrl || ''}')">Edit</button></td>
                    </tr>`;
                    tableBody.append(row);
                });
            } else {
                tableBody.append('<tr><td colspan="6" class="text-center">No variants available</td></tr>');
            }

            $('#pageNumber').text(`Page ${currentPage}`);
            $('#prevPageBtn').prop('disabled', currentPage === 1);
            $('#nextPageBtn').prop('disabled', currentPage * pageSize >= filteredVariants.length);
        }

        // Function to show update modal with selected variant data
        function showUpdateVariant(id, size, color, price, inventoryQuantity, imageUrl) {
            // Set the values of the form fields in the update modal
            $('#updateVariantId').val(id);
            $('#updateSize').val(size);
            $('#updateColor').val(color);
            $('#updatePrice').val(price);
            $('#updateInventoryQuantity').val(inventoryQuantity);

            // Set the current image URL to the hidden input
            $('#currentImageUrlHidden').val(imageUrl);

            // Display current image preview
            if (imageUrl) {
                $('#currentVariantImagePreview').attr('src', imageUrl).show();
            } else {
                $('#currentVariantImagePreview').hide();
            }
            // Clear the file input when opening the modal
            $('#updateImageFile').val('');

            // Show the update variant modal
            $('#updateVariantModal').modal('show');
        }

        $('#prevPageBtn').click(function () {
            if (currentPage > 1) {
                currentPage--;
                showVariants();
            }
        });

        $('#nextPageBtn').click(function () {
            const filteredVariants = fuse.search($('#searchInput').val()).map(result => result.item);
            if (currentPage * pageSize < filteredVariants.length) {
                currentPage++;
                showVariants();
            }
        });

        // Add Variant Form Submission
        $('#createVariantForm').submit(function (e) {
            e.preventDefault();

            const formData = new FormData();
            formData.append('productId', productId); // Ensure productId is sent for new variants
            formData.append('size', $('#size').val().trim());
            formData.append('color', $('#color').val().trim());
            formData.append('price', parseFloat($('#price').val()));
            formData.append('inventoryQuantity', parseInt($('#inventoryQuantity').val()));

            const newImageFile = $('#newVariantImageFile')[0].files[0];
            if (newImageFile) {
                formData.append('ImageFile', newImageFile); // 'ImageFile' must match DTO property
            }

            $.ajax({
                url: `https://localhost:7101/api/Product/variant`, // Assuming this is your API endpoint for adding variants
                type: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                processData: false, // Required for FormData
                contentType: false, // Required for FormData
                data: formData,
                success: function () {
                    alert('✅ Variant added successfully!');
                    $('#addVariantModal').modal('hide');
                    loadProductDetails(); // Reload product details to update variants table
                },
                error: function (xhr) {
                    alert('❌ Failed to add variant: ' + xhr.responseText);
                }
            });
        });

        // Update Variant Form Submission
        $('#updateVariantForm').submit(function (e) {
            e.preventDefault();

            const variantId = $('#updateVariantId').val();
            const formData = new FormData(); // Use FormData for file uploads

            formData.append('price', parseFloat($('#updatePrice').val()));
            formData.append('size', $('#updateSize').val().trim());
            formData.append('color', $('#updateColor').val().trim());
            formData.append('stock', 0); // Assuming stock is always 0 or handled differently
            formData.append('inventoryQuantity', parseInt($('#updateInventoryQuantity').val()));

            // Append the image file if selected
            const imageFile = $('#updateImageFile')[0].files[0];
            if (imageFile) {
                formData.append('ImageFile', imageFile); // 'ImageFile' must match the property name in ProductVariantWithInventoryUpdateDTO
            } else {
                // If no new file is selected, send the existing ImageUrl to retain it
                const currentImageUrl = $('#currentImageUrlHidden').val();
                if (currentImageUrl) {
                    formData.append('ImageUrl', currentImageUrl); // 'ImageUrl' must match the property name in DTO
                }
            }

            $.ajax({
                url: `https://localhost:7101/api/Product/variant/${variantId}`,
                type: 'PUT',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                processData: false, // Don't process the data (required for FormData)
                contentType: false, // Don't set content type (required for FormData)
                data: formData, // Send FormData
                success: function () {
                    alert('✅ Variant updated successfully!');
                    $('#updateVariantModal').modal('hide');
                    loadProductDetails();
                },
                error: function (xhr) {
                    alert('❌ Failed to update variant: ' + xhr.responseText);
                }
            });
        });

        $(document).ready(function () {
            // Event listener for "Add Variant" button
            $('#addVariantBtn').click(function() {
                // Clear the form and any previous file selection
                $('#createVariantForm')[0].reset();
                $('#newVariantImageFile').val('');
                $('#addVariantModal').modal('show');
            });

            $('#searchInput, #minPrice, #maxPrice').on('input', function () {
                currentPage = 1;  // Reset to the first page on filter change
                showVariants();
            });
            loadProductDetails();
        });
    </script>
}