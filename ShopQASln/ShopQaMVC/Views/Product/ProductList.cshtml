@page
@model ShopQaMVC.Views.Product.ProductListModel

<div class="container mt-5">
    <h2 class="mb-4 text-center">Product List</h2>
    <div class="mb-3">
        <a href="/Product/Create" class="btn btn-success">Create New Product</a>
    </div>
    <!-- Filter Form -->
    <form id="searchForm" method="get" class="mb-4">
        <div class="row">
            <div class="col-md-3 mb-3">
                <label for="name" class="form-label">Product Name</label>
                <input type="text" class="form-control" id="name" name="name" placeholder="Search by name" />
            </div>
            <div class="col-md-3 mb-3">
                <label for="categoryId" class="form-label">Category </label>
                <select class="form-control category" id="categoryId" name="categoryId" >
                    <option value="">-- Select category --</option>
                </select>
            </div>

            <div class="col-md-2 mb-3">
                <label for="startPrice" class="form-label">Start Price</label>
                <input type="number" class="form-control" id="startPrice" name="startPrice" placeholder="Min price" step="0.01" />
            </div>

            <div class="col-md-2 mb-3">
                <label for="toPrice" class="form-label">To Price</label>
                <input type="number" class="form-control" id="toPrice" name="toPrice" placeholder="Max price" step="0.01" />
            </div>

            <div class="col-md-2 mb-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100">Search</button>
            </div>
        </div>
    </form>

    <!-- Product List -->
    <div class="table-responsive" id="productTable">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Category</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
              
            </tbody>
        </table>
    </div>

    <!-- Product Detail Modal (hidden by default) -->
    <div class="modal fade" id="productDetailModal" tabindex="-1" aria-labelledby="productDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productDetailModalLabel">Product Detail</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Name:</strong> <span id="detailName"></span></p>
                    <p><strong>Description:</strong> <span id="detailDescription"></span></p>
                    <p><strong>Price:</strong> <span id="detailPrice"></span></p>
                    <p><strong>Category:</strong> <span id="detailCategory"></span></p>
                </div>
            </div>
        </div>
    </div>

    <!-- Update Product Modal -->
    <div class="modal fade" id="updateProductModal" tabindex="-1" aria-labelledby="updateProductModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateProductModalLabel">Update Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="updateProductForm">
                        <div class="mb-3">
                            <label for="updateName" class="form-label">Product Name</label>
                            <input type="text" class="form-control" id="updateName" name="name" placeholder="Enter product name" required />
                        </div>
                        <div class="mb-3">
                            <label for="updateDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="updateDescription" name="description" placeholder="Enter product description" rows="3" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="updatePrice" class="form-label">Price</label>
                            <input type="number" class="form-control" id="updatePrice" name="price" placeholder="Enter product price" step="0.01" required />
                        </div>
                        @* <div class="mb-3"> *@
                        @*     <label for="updateCategoryId" class="form-label">Category ID</label> *@
                        @*     <input type="number" class="form-control" id="updateCategoryId" name="categoryId" placeholder="Enter category ID" required /> *@
                        @* </div> *@
                        <div class="mb-3">
                            <label for="categoryId" class="form-label">Category </label>
                            <select class="form-control category" id="updateCategoryId" name="categoryId" required>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Update Product</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
                    $(document).ready(function() {
             $.ajax({
        type:'GET',
        url:'https://localhost:7101/api/Category',
        contentType: 'application/json',
        success:(response) =>{
            for(var i=0 ; i< response.length;i++){
                const cate = response[i];
                const category = '<option value="' + cate.id + '">' + cate.name + '</option>';
                     $('.category').append(category);
            }
        },
        error:(err) =>{console.log(err);}
            })
            function fetchProducts() {
                var name = $('#name').val();
                var categoryId = $('#categoryId').val() || null;
                var startPrice = $('#startPrice').val();
                var toPrice = $('#toPrice').val();

                $.ajax({
                    url: 'https://localhost:7101/api/Product',
                    type: 'GET',
                    data: {
                        name: name,
                        categoryId: categoryId,
                        startPrice: startPrice,
                        toPrice: toPrice
                    },
                    success: function(data) {
                        var tableBody = $('#productTable tbody');
                        tableBody.empty(); 

                        if (data.length === 0) {
                            tableBody.append('<tr><td colspan="5">No products found</td></tr>');
                        } else {
                            $.each(data, function(index, product) {
                                var row = '<tr>' +
                                    '<td><a href="#" class="product-link" data-id="' + product.id + '">' + product.name + '</a></td>' +
                                    '<td>' + product.description + '</td>' +
                                    '<td>' + product.price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }) + '</td>' +
                                    '<td>' + product.category.name + '</td>' +
                                    '<td>' +
                                        '<button class="btn btn-warning btn-sm update-btn" data-id="' + product.id + '">Update</button> ' +
                                        '<button class="btn btn-danger btn-sm delete-btn" data-id="' + product.id + '">Delete</button>' +
                                    '</td>' +
                                    '</tr>';
                                tableBody.append(row);
                            });
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error fetching data: ' + error);
                    }
                });
            }

            $('#searchForm').submit(function(e) {
                e.preventDefault(); 
                fetchProducts(); 
            });

            $('#productTable').on('click', '.product-link', function(e) {
                e.preventDefault();

                var productId = $(this).data('id'); 

                $.ajax({
                    url: 'https://localhost:7101/api/Product/' + productId, 
                    type: 'GET',
                    success: function(product) {
                        $('#detailName').text(product.name);
                        $('#detailDescription').text(product.description);
                        $('#detailPrice').text(product.price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));
                        $('#detailCategory').text(product.category.name);

                        $('#productDetailModal').modal('show');
                    },
                    error: function(xhr, status, error) {
                        console.error('Error fetching product details: ' + error);
                    }
                });
            });

            $('#productTable').on('click', '.update-btn', function(e) {
                e.preventDefault();
                var productId = $(this).data('id');

                $.ajax({
                    url: 'https://localhost:7101/api/Product/' + productId, 
                    type: 'GET',
                    success: function(product) {
                        $('#updateName').val(product.name);
                        $('#updateDescription').val(product.description);
                        $('#updatePrice').val(product.price);
                        $('#updateCategoryId').val(product.category.id);

                        $('#updateProductModal').data('current-values', product); 

                        $('#updateProductModal').modal('show');
                    },
                    error: function(xhr, status, error) {
                        console.error('Error fetching product data: ' + error);
                    }
                });
            });

            $('#updateProductForm').submit(function(e) {
                e.preventDefault(); 

                var name = $('#updateName').val().trim();
                var description = $('#updateDescription').val().trim();
                var price = parseFloat($('#updatePrice').val());
                var categoryId = parseInt($('#updateCategoryId').val());
                var errors = [];

                if (name === "") {
                    errors.push("Name is required.");
                } else if (!/^[a-zA-ZÀ-Ỹà-ỹ\s]+$/.test(name)) {
                    errors.push("Name must contain only letters and spaces.");
                }

                if (description === "") {
                    errors.push("Description is required.");
                }

                if (price <= 0) {
                    errors.push("Price must be greater than zero.");
                }

                if (!categoryId) {
                    errors.push("Category is required.");
                }

                if (errors.length > 0) {
                    alert(errors.join("\n")); 
                    return; 
                }

                var productData = {
                    name: name,
                    description: description,
                    price: price,
                    categoryId: categoryId
                };

                var currentProduct = $('#updateProductModal').data('current-values');

                var updatedProductData = {
                  name: name,
                    description: description,
                    price: price,
                    categoryId: categoryId,
                    ImageUrl: ''
                };

                if (productData.name !== currentProduct.name) updatedProductData.name = productData.name;
                if (productData.description !== currentProduct.description) updatedProductData.description = productData.description;
                if (productData.price !== currentProduct.price) updatedProductData.price = productData.price;
                if (productData.categoryId !== currentProduct.category.id) updatedProductData.categoryId = productData.categoryId;

                var productId = currentProduct.id;
                $.ajax({
                    url: 'https://localhost:7101/api/Product/' + productId, 
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(updatedProductData),
                    success: function(response) {
                        alert('Product updated successfully!');
                        fetchProducts(); 
                        $('#updateProductModal').modal('hide'); 
                    },
                    error: function(xhr, status, error) {
                        alert('Error updating product: ' + error);
                    }
                });
            });

            $('#productTable').on('click', '.delete-btn', function(e) {
                e.preventDefault();
                var productId = $(this).data('id');

                if (confirm('Are you sure you want to delete this product?')) {
                    $.ajax({
                        url: 'https://localhost:7101/api/Product/' + productId,
                        type: 'DELETE',
                        success: function(response) {
                            alert('Product deleted successfully!');
                            fetchProducts(); 
                        },
                        error: function(xhr, status, error) {
                            alert('Error deleting product: ' + error);
                        }
                    });
                }
            });

            fetchProducts();
        });



    </script>
}
